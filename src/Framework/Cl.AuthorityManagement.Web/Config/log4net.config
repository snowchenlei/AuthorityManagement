<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <!--<root>
      <level value="Error"/>
      <appender-ref ref="ErrorAppender"/>
      <appender-ref ref="AdoNetAppender"/>
    </root> -->
    <!-- Print only messages of level DEBUG or above in the packages -->
    <logger name="LogApiError">
      <level value="Error"/>
      <appender-ref ref="ApiErrorAppender" />
      <appender-ref ref="ErrorSqlServer" />
    </logger>
    <logger name="LogMvcError">
      <level value="Error"/>
      <appender-ref ref="MvcErrorAppender" />
      <appender-ref ref="ErrorSqlServer" />
    </logger>
    <!--监控日志-->
    <logger name="LogApiMonitor">
      <level value="INFO" />
      <appender-ref ref="ApiMonitorAppender" />
      <appender-ref ref="MonitorSqlServer" />
    </logger>
    <logger name="LogMvcMonitor">
      <level value="INFO" />
      <appender-ref ref="MvcMonitorAppender" />
      <appender-ref ref="MonitorSqlServer" />
    </logger>
    <logger name="LogRequestMonitor">
      <level value="INFO" />
      <appender-ref ref="RequestMonitorAppender" />
      <appender-ref ref="RequestMonitorSqlServer" />
    </logger>
    <!--操作日志-->
    <logger name="LogOperate">
      <level value="INFO" />
      <appender-ref ref="OperateSqlServer" />
    </logger>
    
    <!--异常-->
    <appender name="ApiErrorAppender" type="log4net.Appender.RollingFileAppender,log4net" >
      <param name="File" value="App_Data/Error/Api/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。-->
      <maximumFileSize value="400MB" />
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyy/MM/dd/&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;" />
      
      <param name="StaticLogFileName" value="false" />
      <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
        <param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%Property{Message}%n 【日志详细】：%exception
               &#13;&#10;----------------------footer--------------------------&#13;&#10;"/>
      </layout>
    </appender>
      
    <appender name="MvcErrorAppender" type="log4net.Appender.RollingFileAppender,log4net" >
      <param name="File" value="App_Data/Error/Mvc/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。-->
      <maximumFileSize value="400MB" />
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyy/MM/dd/&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;" />
      
      <param name="StaticLogFileName" value="false" />
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%m%n 【日志详细】：%exception
               &#13;&#10;----------------------footer--------------------------&#13;&#10;"/>
      </layout>
    </appender>
    
    <appender name="ErrorSqlServer" type="log4net.Appender.AdoNetAppender">
      <!--BufferSize为缓冲区大小，只有日志记录超设定值才会一块写入到数据库-->
      <bufferSize value="1" />
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--连接数据库字符串-->
      <connectionString value="data source=(localdb)\MSSQLLocalDB;initial catalog=auth;Integrated Security=True;" />
      <!--插入到表Log-->
      <commandText value="INSERT INTO ErrorInfo ([AddTime],[Logger],[Description],[Exception],[InnerException],[Head],[Controller],[Action],[HttpMethod],[IP],[RequestMessage],[ApplicationType]) 
                   VALUES (@log_date, @logger, @description,@exception,@innerException, @header, @controller, @action,@httpmethod,@ip, @requestmessage,@application_type)" />
      <!--日志记录时间，RawTimeStampLayout为默认的时间输出格式-->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <!--日志记录类名称-->
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <!--异常信息。ExceptionLayout 为异常输出的默认格式-->
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
      <!--内部异常-->
      <parameter>
        <parameterName value="@innerException" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout" >
          <conversionPattern value="%Property{InnerException}" />
        </layout>
      </parameter>
      <!--日志消息-->
      <parameter>
        <parameterName value="@description" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Description}" />
        </layout>
      </parameter>
      <!--消息头-->
      <parameter>
        <parameterName value="@header" />
        <dbType value="String" />
        <!--<size value="500" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Head}" />
        </layout>
      </parameter>
      <!--控制器-->
      <parameter>
        <parameterName value="@controller" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Controller}" />
        </layout>
      </parameter>
      <!--方法-->
      <parameter>
        <parameterName value="@action" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Action}" />
        </layout>
      </parameter>
      <!--请求方式-->
      <parameter>
        <parameterName value="@httpmethod" />
        <dbType value="String" />
        <size value="50" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{HttpMethod}" />
        </layout>
      </parameter>
      <!--IP-->
      <parameter>
        <parameterName value="@ip" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{IP}" />
        </layout>
      </parameter>      
      <!--请求消息-->
      <parameter>
        <parameterName value="@requestmessage" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{RequestMessage}" />
        </layout>
      </parameter>      
      <!--日志类型-->
      <parameter>
        <parameterName value="@application_type" />
        <dbType value="Int32" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{ApplicationType}" />
        </layout>
      </parameter>
    </appender>
    
    <!--监控-->
    <appender name="ApiMonitorAppender" type="log4net.Appender.RollingFileAppender,log4net" >
      <param name="File" value="App_Data/Monitor/Api/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。-->
      <maximumFileSize value="400MB" />
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyy/MM/dd/&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;" />
      
      <param name="StaticLogFileName" value="false" />
      <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
        <param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%Property{Message}%n 【日志详细】：%exception
               &#13;&#10;----------------------footer--------------------------&#13;&#10;"/>
      </layout>
    </appender>  
    
    <appender name="MvcMonitorAppender" type="log4net.Appender.RollingFileAppender,log4net" >
      <param name="File" value="App_Data/Monitor/Mvc/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。-->
      <maximumFileSize value="400MB" />
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyy/MM/dd/&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;" />
      
      <param name="StaticLogFileName" value="false" />
      <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
        <param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%Property{Message}%n 【日志详细】：%exception
               &#13;&#10;----------------------footer--------------------------&#13;&#10;"/>
      </layout>
    </appender>  

    <appender name="MonitorSqlServer" type="log4net.Appender.AdoNetAppender">
      <!--BufferSize为缓冲区大小，只有日志记录超设定值才会一块写入到数据库-->
      <bufferSize value="1" />
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--连接数据库字符串-->
      <connectionString value="data source=(localdb)\MSSQLLocalDB;initial catalog=auth;Integrated Security=True;" />
      <!--插入到表Log-->
      <commandText value="INSERT INTO MonitorInfo ([AddTime],[Logger],[Description],[Head],[Controller],[Action],[HttpMethod],[IP],[StartTime],[EndTime],[SumTime],[RequestMessage],[ResponseMessage],[ApplicationType]) 
                   VALUES (@log_date, @logger, @description, @header, @controller, @action,@httpmethod,@ip, @start_time,@end_time,@sum_time, @requestmessage, @responsemessage,@application_type)" />
      <!--日志记录时间，RawTimeStampLayout为默认的时间输出格式-->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <!--日志记录类名称-->
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <!--日志消息-->
      <parameter>
        <parameterName value="@description" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Description}" />
        </layout>
      </parameter>
      <!--消息头-->
      <parameter>
        <parameterName value="@header" />
        <dbType value="String" />
        <!--<size value="500" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Head}" />
        </layout>
      </parameter>
      <!--控制器-->
      <parameter>
        <parameterName value="@controller" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Controller}" />
        </layout>
      </parameter>
      <!--方法-->
      <parameter>
        <parameterName value="@action" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Action}" />
        </layout>
      </parameter>
      <!--请求方式-->
      <parameter>
        <parameterName value="@httpmethod" />
        <dbType value="String" />
        <size value="50" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{HttpMethod}" />
        </layout>
      </parameter>
      <!--IP-->
      <parameter>
        <parameterName value="@ip" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{IP}" />
        </layout>
      </parameter>
      <!--开始时间-->
      <parameter>
        <parameterName value="@start_time" />
        <dbType value="DateTime" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{StartTime}" />
        </layout>
      </parameter>
      <!--结束时间-->
      <parameter>
        <parameterName value="@end_time" />
        <dbType value="DateTime" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{EndTime}" />
        </layout>
      </parameter>
      <!--总时间-->
      <parameter>
        <parameterName value="@sum_time" />
        <dbType value="Double" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{SumTime}" />
        </layout>
      </parameter>
      <!--请求消息-->
      <parameter>
        <parameterName value="@requestmessage" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{RequestMessage}" />
        </layout>
      </parameter>
      <!--响应消息-->
      <parameter>
        <parameterName value="@responsemessage" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{ResponseMessage}" />
        </layout>
      </parameter>
      <!--日志类型-->
      <parameter>
        <parameterName value="@application_type" />
        <dbType value="Int32" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{ApplicationType}" />
        </layout>
      </parameter>
    </appender>

    <!--操作日志-->
    <appender name="OperateSqlServer" type="log4net.Appender.AdoNetAppender">
      <!--BufferSize为缓冲区大小，只有日志记录超设定值才会一块写入到数据库-->
      <bufferSize value="1" />
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--连接数据库字符串-->
      <connectionString value="data source=(localdb)\MSSQLLocalDB;initial catalog=auth;Integrated Security=True;" />
      <!--插入到表Log-->
      <commandText value="INSERT INTO OperateInfo([AddTime],[Remark],[OperateType],[CreateUser_Id]) 
                   VALUES (@log_date,@remark,@operate_type,@createUser_Id)" />
      <!--日志记录时间，RawTimeStampLayout为默认的时间输出格式-->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <!--日志消息-->
      <parameter>
        <parameterName value="@remark" />
        <dbType value="String" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Remark}" />
        </layout>
      </parameter>
      <!--操作类型-->
      <parameter>
        <parameterName value="@operate_type" />
        <dbType value="Int32" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{OperateType}" />
        </layout>
      </parameter>
      <!--操作用户-->
      <parameter>
        <parameterName value="@createUser_Id" />
        <dbType value="Int32" />
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{CreateUser_Id}" />
        </layout>
      </parameter>
    </appender>


    <!--请求第三方-->
    <appender name="RequestMonitorAppender" type="log4net.Appender.RollingFileAppender,log4net" >
      <param name="File" value="App_Data/Monitor/Request/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1" />
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。-->
      <maximumFileSize value="400MB" />
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyy/MM/dd/&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;" />
      <!--计数类型为1，2，3…-->
      <!--<param name="CountDirection" value="1"/>-->
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--<layout type="log4net.Layout.PatternLayout,log4net">-->
      <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
        <param name="ConversionPattern" value=" 【时间】:%d%n 【级别】:%p%n 【类名】:%c%n 【线程ID】: %thread %n 【文件地址】:%F 第%L行%n 【日志内容】:%Property{Message}%n 【日志详细】：%exception
               &#13;&#10;----------------------footer--------------------------&#13;&#10;"/>
      </layout>
    </appender>
    <appender name="RequestMonitorSqlServer" type="log4net.Appender.AdoNetAppender">
      <!--BufferSize为缓冲区大小，只有日志记录超设定值才会一块写入到数据库-->
      <bufferSize value="1" />
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--连接数据库字符串-->
      <connectionString value="data source=(localdb)\MSSQLLocalDB;initial catalog=auth;Integrated Security=True;" />
      <!--插入到表Log-->
      <commandText value="INSERT INTO RequestInfo ([AddTime],[Logger],[Message],[Head],[Url],[RequestMessage],[ResponseMessage]) 
                   VALUES (@log_date, @logger, @message, @header, @url, @requestmessage, @responsemessage)" />
      <!--日志记录时间，RawTimeStampLayout为默认的时间输出格式--> 
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <!--日志记录类名称-->
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <!--日志消息-->
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Message}" />
        </layout>
      </parameter>
      <!--消息头-->
      <parameter>
        <parameterName value="@header" />
        <dbType value="String" />
        <!--<size value="500" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Head}" />
        </layout>
      </parameter>
      <!--请求地址-->
      <parameter>
        <parameterName value="@url" />
        <dbType value="String" />
        <!--<size value="500" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{Url}" />
        </layout>
      </parameter>
      <!--请求消息-->
      <parameter>
        <parameterName value="@requestmessage" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{RequestMessage}" />
        </layout>
      </parameter>
      <!--响应消息-->
      <parameter>
        <parameterName value="@responsemessage" />
        <dbType value="String" />
        <!--<size value="4000" />-->
        <layout type="Cl.AuthorityManagement.Common.Logger.CustomerPatternLayout">
          <conversionPattern value="%Property{ResponseMessage}" />
        </layout>
      </parameter>
    </appender>
  </log4net>
</configuration>
